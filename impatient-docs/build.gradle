/*
 * Copyright (c) 2007-2015 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    maven{ url 'http://dl.bintray.com/content/aalmiray/asciidoctor' }
    maven{ url 'http://jcenter.bintray.com' }
  }

  dependencies {
    classpath 'org.asciidoctor:asciidoctor-gradle-plugin:0.5.0'
  }
}

apply plugin: 'java'
apply plugin: 'asciidoctor'

asciidoctor {

  //sourceDocumentName = file( 'src/asciidoc/index.adoc' )

  // http://asciidoc.org/userguide.html#X88
  // attributed must all be lowercase

  def attributes = [
          toc2: '',
          //revnumber: version,
          'source-highlighter': 'highlightjs',
          'highlightjs-theme': 'pojoaque',
          'linkcss!': '',
          stylesdir: 'impatient-docs/src/site/stylesheets/', // should not be relative to rootDir
          stylesheet: 'cascading.css',
          'data-uri': '',
          imagesdir: 'impatient-docs/src/site/images/', // should not be relative to rootDir
          //artifactsurl: project.s3Bucket,
          //docsurl: project.s3BucketDocs,
          //projectroot: project.rootDir,
          analyticsid: System.properties[ 'analytics.id' ],
          analyticsdomain: System.properties[ 'analytics.domain' ]

          // disabled till attributes in docinfo is supported
//          docinfo1: '',
  ]
  options = [
          template_dir: 'impatient-docs/src/templates/',
          eruby: 'erubis',
          attributes: attributes
  ]
}

task zipDocs( type: Zip, dependsOn: asciidoctor ){
  baseName = "impatient"
  from (asciidoctor.outputDir){
      include '*.*'
  }
  into "impatient-docs"
}


task docDist( type: Copy, dependsOn: [asciidoctor, zipDocs] ) {
  description = "publish documentation"

  from asciidoctor.outputDir
  from zipDocs.destinationDir
  into "${rootProject.s3UploadDocs.source}/" // intentionally publish to root

  rootProject.s3UploadDocs.dependsOn docDist
}
